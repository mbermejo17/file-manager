(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

////////////////////////////////////
// Users manage module
///////////////////////////////////

var searchUserName = function searchUserName(userName) {
  if (RunMode === "DEBUG") console.log(userName);

  execFetch("/searchuser?userName=" + userName, "GET", null).then(function (d) {
    if (RunMode === "DEBUG") console.log(d);
    if (d.status == "OK") {
      showAddUserForm("Edit User", d.data);
    } else {
      showToast(d.message, "err");
    }
  }).catch(function (e) {
    showToast("Error al buscar usuario " + userName + ".<br>Err:" + e, "err");
    if (RunMode === "DEBUG") console.log(e);
  });
};

var LoadUsersList = function LoadUsersList(el) {
  execFetch("/users", "GET").then(function (d) {
    if (RunMode === "DEBUG") console.log(d);
    var users = d.data;
    var options = '';
    for (var x = 0; x < users.length; x++) {
      options += "<option id=\"" + users[x].UserId + "\">" + users[x].UserName + "</option>";
    }
    el.innerHTML = options;
  }).catch(function (e) {
    showToast("Error al grabar los cambios para el usuario " + data.userName + ".<br>Err:" + e, "err");
    if (RunMode === "DEBUG") console.log(e);
  });
};

var editUser = function editUser() {
  var AddUserModalContent = document.querySelector("#AddUserModalContent");
  var SearchUserModalContent = document.querySelector("#searchUserModalContent");

  var containerOverlay = document.querySelector(".container-overlay");
  AddUserModalContent.style.display = "none";
  SearchUserModalContent.innerHTML = htmlSearchUserTemplate;
  LoadUsersList(document.getElementById('usersList'));
  SearchUserModalContent.style.display = "block";
  containerOverlay.style.display = "block";
  SearchUserModalContent.addEventListener("keyup", function (e) {
    e.preventDefault();
    if (e.keyCode === 13) {
      searchUserName(document.getElementById("searchUserName").value);
    }
  });
  document.querySelector("#btnSearchUser").addEventListener("click", function (e) {
    e.preventDefault();
    searchUserName(document.getElementById("searchUserName").value);
  });
  document.querySelector("#btn-SearchUserCancel").addEventListener("click", function (e) {
    e.preventDefault();
    SearchUserModalContent.style.display = "none";
    containerOverlay.style.display = "none";
  });
};

var selectRole = function selectRole(element, role) {
  if (RunMode === "DEBUG") console.log(role);
  for (var x = 0; x < element.options.length; x++) {
    if (RunMode === "DEBUG") console.log("option: ", element.options[x].text);
    if (element.options[x].text.toUpperCase() === role.toUpperCase()) {
      element.options[x].selected = "selected";
      element.selectedIndex = x;
      if (RunMode === "DEBUG") console.log("option selected: ", element.options[x].text);
      if (role.toUpperCase() !== "CUSTOM") {
        changeAccessRights(document.querySelectorAll(".AccessRightsSwitch"), element.options[x].value);
      }
      break;
    }
  }
};

var showAddUserForm = function showAddUserForm(title, data) {
  var AddUserModalContent = document.querySelector("#AddUserModalContent");
  var containerOverlay = document.querySelector(".container-overlay");
  var SearchUserModalContent = document.querySelector("#searchUserModalContent");
  var mode = data ? "edit" : "add";
  var oldData = null;
  SearchUserModalContent.style.display = "none";

  AddUserModalContent.innerHTML = htmlUserFormTemplate;
  if (data) {
    if (RunMode === "DEBUG") console.log(data);
    oldData = _extends({}, data);
    document.querySelector("#userFormTitle").innerHTML = title;
    document.querySelector("#UserName").value = data.UserName;
    document.querySelector("#CompanyName").value = data.CompanyName;
    document.querySelector("#UserPasswd").value = data.UserPasswd;
    document.querySelector("#repeatUserPasswd").value = data.UserPasswd;
    document.querySelector("#RootPath").value = data.RootPath;
    document.querySelector("#ExpirateDate").value = data.ExpirateDate;
    //document.querySelector("#expirationDate")
    selectRole(document.querySelector("#RoleOptions"), data.Role);
    if (data.Role.toUpperCase() === "CUSTOM") checkAccessRights(data.AccessString);
    containerOverlay.style.display = "block";
    AddUserModalContent.style.display = "block";
    document.querySelector("label[for=UserName]").classList.add("active");
    document.querySelector("label[for=CompanyName]").classList.add("active");
    document.querySelector("label[for=UserPasswd]").classList.add("active");
    document.querySelector("label[for=repeatUserPasswd]").classList.add("active");
    document.querySelector("label[for=RootPath]").classList.add("active");
    document.querySelector("#UserName").disabled = true;

    document.querySelector("#btn-addUserCancel").addEventListener("click", function (e) {
      e.preventDefault();
      //containerOverlay.style.display = "none";
      AddUserModalContent.style.display = "none";
      SearchUserModalContent.style.display = "block";
    });
    document.querySelector("#btn-addUserAcept").addEventListener("click", function (e) {
      e.preventDefault();
      _updateUser(oldData);
    });
  } else {
    containerOverlay.style.display = "block";
    AddUserModalContent.style.display = "block";
    changeAccessRights(document.querySelectorAll(".AccessRightsSwitch"), "opt1");
    document.querySelector("#btn-addUserCancel").addEventListener("click", function (e) {
      e.preventDefault();
      containerOverlay.style.display = "none";
      AddUserModalContent.style.display = "none";
    });
    document.querySelector("#btn-addUserAcept").addEventListener("click", function (e) {
      e.preventDefault();
      _addUser();
    });
  }

  var sel = document.querySelector("select");

  $(".AccessRightsSwitch").change(function () {
    if ($(this).is(":checked")) {
      if (RunMode === "DEBUG") console.log("Is checked");
    } else {
      if (RunMode === "DEBUG") console.log("Is Not checked");
    }
  });

  sel.addEventListener("change", function (e) {
    var opt = e.target[e.target.selectedIndex].value;
    var AccessSwitch = document.querySelectorAll(".AccessRightsSwitch");
    changeAccessRights(AccessSwitch, opt);
  });

  var _getUserRole = function _getUserRole() {
    return sel.options[sel.selectedIndex].text;
  };

  var _getChanges = function _getChanges() {
    var AccessSwitch = document.querySelectorAll(".AccessRightsSwitch");
    var accessString = _getAccessString(AccessSwitch);
    var userRole = _getUserRole();
    var queryString = {};
    if (RunMode === "DEBUG") console.log(oldData);
    for (var prop in oldData) {
      if (hasOwnProperty.call(oldData, prop)) {
        console.log(prop);
        if (prop === "Role") {
          if (oldData[prop].toUpperCase() !== userRole.toUpperCase()) {
            queryString.Role = userRole;
            console.warn(oldData[prop], userRole);
          } else {
            console.log(oldData[prop], userRole);
          }
        } else {
          if (prop === "AccessString") {
            if (oldData[prop] !== accessString) {
              console.warn(oldData[prop], accessString);
              queryString.AccessString = accessString;
            } else {
              console.log(oldData[prop], accessString);
            }
          } else {
            if (prop === 'ExpirateDate') {
              if (oldData[prop] === null) oldData[prop] = '';
              if (oldData[prop] !== document.getElementById(prop).value) {
                queryString.ExpirateDate = document.getElementById(prop).value;
                console.warn(oldData[prop], document.getElementById(prop).value);
              } else {
                console.log(oldData[prop], document.getElementById(prop).value);
              }
            } else {
              if (oldData[prop].toUpperCase() !== document.getElementById(prop).value.toUpperCase()) {
                queryString[prop] = document.getElementById(prop).value;
                console.warn(oldData[prop], document.getElementById(prop).value);
              } else {
                console.log(oldData[prop], document.getElementById(prop).value);
              }
            }
          }
        }
      }
    }
    if (RunMode === 'DEBUG') console.log(queryString);
    return queryString;
  };

  var _updateUser = function _updateUser(oData) {
    var queryString = _getChanges();
    if (queryString) {
      var _data = {
        userName: oData.UserName,
        queryString: queryString
      };
      execFetch("/updateuser", "POST", _data).then(function (d) {
        if (RunMode === "DEBUG") console.log(d);
        showToast("Datos usuario " + _data.userName + " actualizados.", "success");
        document.getElementById("refresh").click();
      }).catch(function (e) {
        showToast("Error al grabar los cambios para el usuario " + _data.userName + ".<br>Err:" + e, "err");
        if (RunMode === "DEBUG") console.log(e);
      });
    }
  };

  var _getAccessString = function _getAccessString(AccessSwitch) {
    var result = "";
    var v = 0;

    for (var x = 0; x < AccessSwitch.length; x++) {
      if (AccessSwitch[x].checked) {
        v = 1;
      } else {
        v = 0;
      }
      if (x != 0) {
        result += "," + v;
      } else {
        result += v;
      }
    }
    return result;
  };

  var _addUser = function _addUser() {
    var AccessSwitch = document.querySelectorAll(".AccessRightsSwitch");
    var userName = document.querySelector("#UserName").value;
    var companyName = document.querySelector("#CompanyName").value;
    var userPassword = document.querySelector("#UserPasswd").value;
    var userRole = sel[sel.selectedIndex].innerHTML;
    var userRootPath = document.querySelector("#RootPath").value;
    var expirateDate = document.querySelector("#ExpirateDate").value;
    var result = _getAccessString(AccessSwitch);

    if (RunMode === "DEBUG") console.log("User Name: " + userName);
    if (RunMode === "DEBUG") console.log("Company Name: " + companyName);
    if (RunMode === "DEBUG") console.log("Password: " + userPassword);
    if (RunMode === "DEBUG") console.log("Root Path: " + userRootPath);
    if (RunMode === "DEBUG") console.log("Expirate Date: " + expirateDate);
    if (RunMode === "DEBUG") console.log("Role: " + userRole);
    if (RunMode === "DEBUG") console.log("Access Rights: " + result);
    var data = {
      userName: userName,
      userPassword: Base64.encode(md5(userPassword)),
      companyName: companyName,
      userRole: userRole,
      expirateDate: expirateDate,
      rootPath: userRootPath,
      accessRights: result
    };
    execFetch("/adduser", "POST", data).then(function (d) {
      if (RunMode === "DEBUG") console.log(d);
      showToast("Usuario " + data.userName + " añadido.", "success");
      document.getElementById("refresh").click();
      document.querySelector("#formAddUser").reset();
      changeAccessRights(document.querySelectorAll(".AccessRightsSwitch"), "opt1");
    }).catch(function (e) {
      showToast("Error al añadir usuario " + data.userName + ".<br>Err:" + e, "err");
      if (RunMode === "DEBUG") console.log(e);
    });
  };
};

////////////////////////////////////
// End user manage module
///////////////////////////////////

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
